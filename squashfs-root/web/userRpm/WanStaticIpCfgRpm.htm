
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<SCRIPT type="text/javascript"><!--//
var wanType = new Array(
"id=\"t_dyma_ip\" name=\"t_dyma_ip\">Dynamic IP<",	//	WAN_TYPE_DHCP = 0,
"id=\"t_stat_ip\" name=\"t_stat_ip\">Static IP<",	//	WAN_TYPE_STATIC_IP, 
"id=\"t_pppoe\" name=\"t_pppoe\">PPPoE/Russia PPPoE<",	//	WAN_TYPE_PPPOE, 
"id=\"t_dhcp\" name=\"t_dhcp\">802.1x DHCP<",	//	WAN_TYPE_802_1X_DHCP,
"id=\"t_802_stat_ip\" name=\"t_802_stat_ip\">802.1x Static IP<",	//	WAN_TYPE_802_1X_STATIC_IP,
"id=\"t_bpa\" name=\"t_bpa\">BigPond Cable<",	//	WAN_TYPE_BPA,
"id=\"t_l2tp\" name=\"t_l2tp\">L2TP/Russia L2TP<",	//	WAN_TYPE_L2TP,
"id=\"t_pptp\" name=\"t_pptp\">PPTP/Russia PPTP<",	//	WAN_TYPE_PPTP,
""	//	WAN_TYPE_END
);
function doSubmit()
{
	var val;
	val=document.forms[0].mtu.value;
	if(val<576||val>1500||val=="")
	{
		alert(js_bad_mtu="Bad MTU, please input another number!(576 ~ 1500, the default is 1500)");
		return false;
	}

	// Check ip address. Must input a valid ip address.
	if(document.forms[0].ip.value == "0.0.0.0")
	{
		alert(js_bad_ip_2="The IP address is invalid, please input another one!");
		return false;
	}
	if(!is_ipaddr(document.forms[0].ip.value))
	{
		var element =document.forms[0].ip;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}

	// Check mask. Must input a valid mask.
	if(document.forms[0].mask.value == "0.0.0.0")
	{
		alert(js_bad_mask="The Subnet Mask is invalid, please input another one (for example: 255.255.255.0)!");
		return false;
	}
	if(!is_maskaddr(document.forms[0].mask.value))
	{
		var element =document.forms[0].mask;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}

	// Check gateway. Must input a valid gateway.
	if(document.forms[0].gateway.value == "0.0.0.0")
	{
		alert(js_bad_gateway="The gateway is invalid, please input another one!");
		return false;
	}
	if(!is_gatewayaddr(document.forms[0].gateway.value))
	{
		var element =document.forms[0].gateway;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}

	// Check primary dns server. Must input a valid dns server
	if(document.forms[0].dnsserver.value == "0.0.0.0")
	{
		alert(js_bad_dns="The DNS server address is invalid, please input another one!");
		return false;
	}
	if(!is_dnsaddr(document.forms[0].dnsserver.value))
	{
		var element =document.forms[0].dnsserver;
		if(element)
		{
			element.focus();
			element.select();
		}
		return false;
	}

	// Check second dns server. It's optional.
	if(document.forms[0].dnsserver2.value != "0.0.0.0" && document.forms[0].dnsserver2.value != "")
	{
		if(!is_dnsaddr(document.forms[0].dnsserver2.value))
		{
			var element =document.forms[0].dnsserver2;
			if(element)
			{
				element.focus();
				element.select();
			}
			return false;
		}
	}

	return true;
}
function doChange()
{
	var n = 0;
	if(staticIpInf[0] > 1)
	{
		n = document.forms[0].wan.value;
	}
	s = "wan="+n;
	var t = document.forms[0].wantype.selectedIndex;
	location.href = "/userRpm/"+wantypeinfo[t*2+2]+"?"+s;
}

function doWanChange()
{
	var n = document.forms[0].wan.selectedIndex;
	var s = "wan="+n;
	location.href = "/userRpm/WanCfgRpm.htm"+"?"+s;
}

function netClick()
{
	if(document.forms[0].Intranet.checked==false) 
	{
		document.forms[0].netRange.disabled=true;
	} 
	else
	{
		document.forms[0].netRange.disabled=false;
	}
}
function checkIP()
{
	var obj = document.getElementById("netRange").value;
	var n = obj.indexOf("-");
	if(n == -1)
	{
            alert(js_interior_network_inv="The Interior network is invalid, please input again!");
            return false;
        }
	var beginIP = obj.substring(0,n)
	var endIP = obj.substring(n+1);
	if(ipverify(beginIP) && ipverify(endIP))
	{
		return true;
	}
	else
	{
		alert(js_interior_network_inv="The Interior network is invalid, please input again!");
		return false;
	}
}
function doDetect()
{
	location.href="/userRpm/WanStaticIpCfgRpm.htm?detect=1";
}

function refresh()
{	
	location.href="/userRpm/WanStaticIpCfgRpm.htm";	
}
//--></SCRIPT>
</HEAD>
<SCRIPT type="text/javascript">
</SCRIPT>
<BODY onLoad="LoadHelp('WanStaticIpCfgHelpRpm.htm');setTagStr(document,'ntw_static_ip_cfg'); resize(this);" onResize="resize(this);">
<FORM action="WanStaticIpCfgRpm.htm" enctype="multipart/form-data" method="get" onSubmit="return doSubmit();">
  <TABLE id="autoWidth">
    <TR>
      <TD class=h1 colspan=2 id = "t_title">WAN</TD>
    </TR>
    <TR>
      <TD class=blue colspan=2></TD>
    </TR>
    <SCRIPT type="text/javascript">
if(staticIpInf[0] > 1)
{
	document.write('<TR><TD class=Item id = \"t_wan_port\">WAN Port:<\/TD><TD><select name=\"wan\"  id=\"wan\" onChange=\"doWanChange()\">');
	for(var i=0;i<staticIpInf[0];i++)
	{
		document.write('<option value=\"'+i+'\">WAN'+ (i+1)+'<\/option>');
	}
	document.write('<\/select>');
}
//added by ZQQ,08.12.10 , if one wan, it should be exist but not display
else
{	
	document.write('<TR style =\"display:none\"><TD class=Item id = \"t_wan_port\">WAN Port:<\/TD><TD><select name=\"wan\" id=\"wan\" onChange=\"doWanChange()\">')
	document.write('<option value=0>WAN1<\/option>');
    document.write('<\/select>');
}
</SCRIPT>
    </td>
    
    </tr>
    
    <TR>
      <TD class=Item id = "t_wan_conn_tp">WAN Connection Type:</TD>
      <TD><SELECT name="wantype" onChange="doChange()">
          <SCRIPT type="text/javascript">
for ( var t=0; t < wantypeinfo[0]; t++)
{
	document.write('<option value="'+wantypeinfo[t*2+1]+'" '+wanType[wantypeinfo[t*2+1]]+'\/option>');
}
</SCRIPT>
        </SELECT>
        &nbsp;
        <INPUT name="Discover" type="button" class="button" id="discover" value="Detect" onclick=doDetect()>
        <SCRIPT type="text/javascript">
	var HAVE_NOT_DETECTED = 0;
	var DETECTIING = 1;
	var HAVE_DETECTED = 2;
	var DISCONNECTED = 3;

	var detected_wan_type = wanTypeDetectInfoArray[0];
	var wan_type_detect_stat = wanTypeDetectInfoArray[1];
	var wait_time = wanTypeDetectInfoArray[2];
	
	switch (wan_type_detect_stat)
	{		
	case HAVE_NOT_DETECTED:
		document.write('&nbsp;<font color="0000FF">' + '         ' + '<\/font>');	
		break;
	case DETECTIING:
		document.write('&nbsp;<span style="color:#0000FF" id="t_det">Detecting...<\/span>');
		window.setTimeout("refresh()", wait_time);
		break;
	case HAVE_DETECTED:
		document.write('&nbsp;<span style="color:#0000FF"' + wanType[detected_wan_type] + '\/span>');
		break;
	case DISCONNECTED:
		document.write('&nbsp;<span style="color:#FF0000" id="t_unplugged">Unplugged<\/span>');
		break;
	default:
		break;
	}
</SCRIPT></TD>
    </TR>
    <TR id="showIntranet" style="display:none;">
      <TD class=Item ><INPUT type="checkbox" name="Intranet" value="2" onClick="netClick();" >
        <SPAN id = "t_in_net_ran">Interior network:</SPAN></TD>
      <TD><INPUT id = "netRange" name="netRange" value="" type="text" class="text" size="32" maxlength="31"  onblur = "checkIP()" onFocus="doFocus();"></TD>
    </TR>
    <TR>
      <TD colspan=2></TD>
    </TR>
    <TR>
      <TD class=Item id = "t_ip_addr">IP Address:</TD>
      <TD><INPUT name="ip" type="text" class="text" value="" size="15" maxlength="15"></TD>
    </TR>
    <TR>
      <TD class=Item id = "t_sub_mask">Subnet Mask:</TD>
      <TD><INPUT name="mask" type="text" class="text" value="" size="15" maxlength="15"></TD>
    </TR>
    <TR>
      <TD class=Item id = "t_def_gateway">Default Gateway:</TD>
      <TD><INPUT name="gateway" type="text" class="text" value="" size="15" maxlength="15">
        <SPAN id = "t_option">&nbsp;</SPAN></TD>
    </TR>
    <TR>
      <TD colspan=2></TD>
    </TR>
    <TR>
      <TD class=Item id = "t_mtu_size">MTU Size (in bytes):</TD>
      <TD><INPUT name="mtu" type="text" class="text" value="" size="5" maxlength="5">
        <SPAN id = "t_desc">&nbsp;(The default is 1500, do not change unless necessary.)</SPAN></TD>
    </TR>
    <TR>
      <TD colspan=2></TD>
    </TR>
    <TR>
      <TD class=Item id = "t_pri_dns">Primary DNS:</TD>
      <TD><INPUT name="dnsserver" type="text" class="text" value="" size="15" maxlength="15">
        <SPAN id = "t_option1">&nbsp;</SPAN></TD>
    </TR>
    <TR>
      <TD class=Item id = "t_sec_dns">Secondary DNS:</TD>
      <TD><INPUT name="dnsserver2" type="text" class="text" value="" size="15" maxlength="15">
        <SPAN id="t_opt2">&nbsp;(Optional)</SPAN></TD>
    </TR>
    <TR>
      <TD class=blue colspan=2></TD>
    </TR>
    <TR>
      <TD></TD>
      <TD><INPUT name="Save" type="submit" class="buttonBig" value="Save"></TD>
    </TR>
  </TABLE>
</FORM>
</BODY>
<HEAD>
<META http-equiv="pragma" content="no-cache">
</HEAD>
</HTML>
<SCRIPT type="text/javascript">
if(staticIpInf[0] != 1)
{
document.forms[0].wan.selctedIndex = staticIpInf[5];
}
document.forms[0].wantype.selectedIndex = staticIpInf[6];
document.forms[0].ip.value = staticIpInf[12];
document.forms[0].mask.value = staticIpInf[13];
document.forms[0].gateway.value = staticIpInf[14];
document.forms[0].mtu.value = staticIpInf[15];
document.forms[0].dnsserver.value = staticIpInf[16];
document.forms[0].dnsserver2.value = staticIpInf[17];
netClick();
if(staticIpInf[0] > 1)
{
//	document.getElementById('showBandWidth').style.display = "block";
//	document.getElementById('showIntranet').style.display = "block";
}
</SCRIPT>
